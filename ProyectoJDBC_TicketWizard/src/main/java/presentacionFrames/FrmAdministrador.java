/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacionFrames;

import dtos.AsientoDTO;
import dtos.EventoDTO;
import dtos.UsuarioDTO;
import excepciones.NegocioException;
import interfaces.IBoletoBO;
import interfaces.IEventoBO;
import interfaces.IUsuarioBO;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import negocio.BoletoBO;
import negocio.EventoBO;
import negocio.UsuarioBO;
import utilidades.Forms;

/**
 *
 * @author pauli
 */
public class FrmAdministrador extends javax.swing.JFrame {
    
    private UsuarioDTO usuarioLoggeado;
    private IEventoBO eventobo;
    private IUsuarioBO usuariobo;
    private EventoDTO eventoCreando;
    private IBoletoBO boletobo;

    /**
     * Creates new form FrmBoletosAdquiridos
     */
    public FrmAdministrador(UsuarioDTO usuarioLoggeado) {
        initComponents();
        this.usuarioLoggeado = usuarioLoggeado;
        this.eventobo = new EventoBO();
        this.usuariobo = new UsuarioBO();
        
        this.boletobo = new BoletoBO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAsignarBoletos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnGuardarEvento = new javax.swing.JButton();
        txtLocalidad = new javax.swing.JTextField();
        txtVenue = new javax.swing.JTextField();
        txtFilas = new javax.swing.JTextField();
        txtAsientos = new javax.swing.JTextField();
        labelCapacidad = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnCancelar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnVerBoletos = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Administrador");

        btnAsignarBoletos.setText("Asignar boletos");
        btnAsignarBoletos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarBoletosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Crear Evento");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Fecha:");

        jLabel5.setText("Localidad:");

        jLabel6.setText("Numero de filas:");

        jLabel7.setText("Numero de asientos por fila:");

        jLabel8.setText("Capacidad:");

        jLabel9.setText("Venue:");

        btnGuardarEvento.setText("Guardar Evento");
        btnGuardarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarEventoActionPerformed(evt);
            }
        });

        txtFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilasKeyReleased(evt);
            }
        });

        txtAsientos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAsientosKeyReleased(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        jLabel10.setText("Precio:");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
        });

        btnVerBoletos.setText("Boletos asignados");
        btnVerBoletos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerBoletosActionPerformed(evt);
            }
        });

        jButton1.setText("Cerrar Sesi√≥n");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Descripcion:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAsignarBoletos)
                        .addGap(18, 18, 18)
                        .addComponent(btnVerBoletos))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardarEvento)
                                        .addGap(58, 58, 58)
                                        .addComponent(btnCancelar))
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVenue, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(163, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(19, 19, 19))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAsientos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFilas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtVenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAsientos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(labelCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarEvento)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAsignarBoletos)
                    .addComponent(btnVerBoletos))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarBoletosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarBoletosActionPerformed
        Forms.cargarForm(new FrmEventoAsignar(usuarioLoggeado), this);
    }//GEN-LAST:event_btnAsignarBoletosActionPerformed

    private void btnGuardarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarEventoActionPerformed
        this.crearEvento();
    }//GEN-LAST:event_btnGuardarEventoActionPerformed

    private void txtFilasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilasKeyReleased
        actualizarCapacidad();
        validarEnterosFilas();
    }//GEN-LAST:event_txtFilasKeyReleased

    private void txtAsientosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsientosKeyReleased
        actualizarCapacidad();
        validarEnterosAsientos();
    }//GEN-LAST:event_txtAsientosKeyReleased

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        // TODO add your handling code here:
        String text = txtPrecio.getText();
        if (!isValidDouble(text)) {
            txtPrecio.setText(text.substring(0, text.length() - 1));
        }
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void btnVerBoletosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerBoletosActionPerformed
        // TODO add your handling code here:
        Forms.cargarForm(new FrmBoletosAsignados(usuarioLoggeado), this);
    }//GEN-LAST:event_btnVerBoletosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Forms.cargarForm(new IniciarSesion(), this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed
    private boolean isValidDouble(String text) {
        if (text.isEmpty()) {
            return true; // Permitir campo vac√≠o
        }
        try {
            Double.parseDouble(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    private void crearEvento() {
        eventoCreando = new EventoDTO();
        Date mFecha = jDateChooser1.getDate();
        try {

            // Inicializamos una bandera para identificar si hay campos vac√≠os
            boolean hayCamposVacios = false;
            StringBuilder camposFaltantes = new StringBuilder("Por favor, completa los siguientes campos:\n");

            // Verificar cada campo
            if (txtNombre.getText().isEmpty()) {
                camposFaltantes.append("- Nombre del evento\n");
                hayCamposVacios = true;
            }
            
            if (mFecha == null) {
                camposFaltantes.append("- Fecha del evento\n");
                hayCamposVacios = true;
            }
            
            if (txtLocalidad.getText().isEmpty()) {
                camposFaltantes.append("- Localidad del evento\n");
                hayCamposVacios = true;
            }
            
            if (txtVenue.getText().isEmpty()) {
                camposFaltantes.append("- Venue del evento\n");
                hayCamposVacios = true;
            }
            
            if (txtDescripcion.getText().isEmpty()) {
                camposFaltantes.append("- Descripcion del evento\n");
                hayCamposVacios = true;
            }
            
            if (txtFilas.getText().isEmpty()) {
                camposFaltantes.append("- N√∫mero de filas\n");
                hayCamposVacios = true;
            }
            
            if (txtAsientos.getText().isEmpty()) {
                camposFaltantes.append("- N√∫mero de asientos por fila\n");
                hayCamposVacios = true;
            }
            if (txtPrecio.getText().isEmpty()) {
                camposFaltantes.append("- Precio\n");
                hayCamposVacios = true;
            }

            // Si hay al menos un campo vac√≠o, mostramos el mensaje
            if (hayCamposVacios) {
                JOptionPane.showMessageDialog(this, camposFaltantes.toString(), "Campos Vac√≠os", JOptionPane.ERROR_MESSAGE);
            } else {
                
                Calendar cal = Calendar.getInstance();
                cal.setTime(mFecha);
                int a√±oNacimiento = cal.get(Calendar.YEAR);
                int a√±oActual = Calendar.getInstance().get(Calendar.YEAR);
                int edad = a√±oActual - a√±oNacimiento;
                
                eventoCreando.setNombre(txtNombre.getText());
                java.sql.Date fechaSQL = new java.sql.Date(mFecha.getTime());
                eventoCreando.setFecha(fechaSQL);
                eventoCreando.setLocalidad(txtLocalidad.getText());
                eventoCreando.setVenue(txtVenue.getText());
                eventoCreando.setDescripcion(txtDescripcion.getText());
                
                this.actualizarCapacidad();
                
                if (eventobo.existeEvento(eventoCreando.getNombre())) {
                    JOptionPane.showMessageDialog(this, "El nombre del evento ya est√° registrado. Por favor, use otro.", "Error!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                this.guardarEvento();
                EventoDTO evento = this.eventobo.consultarPorNombre(txtNombre.getText());
                double precioDouble = Double.parseDouble(txtPrecio.getText());
                boletobo.crearBoletos(Integer.parseInt(txtFilas.getText()), Integer.parseInt(txtAsientos.getText()), evento.getIdEvento(), precioDouble);
                
                JOptionPane.showMessageDialog(this, "Exito!, se ha creado el evento correctamente.");
                
                Forms.cargarForm(new FrmEventosAdministrador(usuarioLoggeado), this);
            }
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error durante la operacion, intentelo denuevo", "Error!", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void guardarEvento() {
        try {
            this.eventobo.agregar(eventoCreando);
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, "El usuairo no ha podido registrarse correctamente.", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void actualizarCapacidad() {
        try {
            int filas = Integer.parseInt(txtFilas.getText());
            int asientos = Integer.parseInt(txtAsientos.getText());
            int capacidad = filas * asientos;
            labelCapacidad.setText(String.valueOf(capacidad));
            eventoCreando.setCapacidad(capacidad); // Actualizar el objeto eventoCreando
        } catch (NumberFormatException ex) {
            // Si el usuario no ha ingresado n√∫meros v√°lidos, puedes manejarlo aqu√≠
            labelCapacidad.setText("0");  // Muestra 0 si los valores no son v√°lidos
        }
    }
    
    private boolean validarEnterosFilas() {
        boolean hayCamposVacios = false;
        StringBuilder camposFaltantes = new StringBuilder("Por favor, completa los siguientes campos:\n");

        // Validaci√≥n del campo de filas
        if (txtFilas.getText().isEmpty()) {
            camposFaltantes.append("- N√∫mero de filas\n");
            hayCamposVacios = true;
        } else {
            try {
                Integer.parseInt(txtFilas.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, ingresa un n√∫mero v√°lido para el n√∫mero de filas.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                return false; // Indicar que la validaci√≥n fall√≥
            }
        }

        // Mostrar mensaje si hay campos vac√≠os
        if (hayCamposVacios) {
            JOptionPane.showMessageDialog(this, camposFaltantes.toString(), "Campos Vac√≠os", JOptionPane.ERROR_MESSAGE);
            return false; // Indicar que la validaci√≥n fall√≥
        }
        
        return true; // Indicar que la validaci√≥n fue exitosa
    }
    
    private boolean validarEnterosAsientos() {
        boolean hayCamposVacios = false;
        StringBuilder camposFaltantes = new StringBuilder("Por favor, completa los siguientes campos:\n");

        // Validaci√≥n del campo de filas
        if (txtAsientos.getText().isEmpty()) {
            camposFaltantes.append("- N√∫mero de filas\n");
            hayCamposVacios = true;
        } else {
            try {
                Integer.parseInt(txtAsientos.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, ingresa un n√∫mero v√°lido para el n√∫mero de filas.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                return false; // Indicar que la validaci√≥n fall√≥
            }
        }

        // Mostrar mensaje si hay campos vac√≠os
        if (hayCamposVacios) {
            JOptionPane.showMessageDialog(this, camposFaltantes.toString(), "Campos Vac√≠os", JOptionPane.ERROR_MESSAGE);
            return false; // Indicar que la validaci√≥n fall√≥
        }
        
        return true; // Indicar que la validaci√≥n fue exitosa
    }

    /**
     * Limpia los campos de texto.
     */
    public void limpiarTextbox() {
        txtNombre.setText("");
        jDateChooser1.setDate(null);
        txtLocalidad.setText("");
        txtVenue.setText("");
        txtFilas.setText("");
        txtAsientos.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignarBoletos;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardarEvento;
    private javax.swing.JButton btnVerBoletos;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelCapacidad;
    private javax.swing.JTextField txtAsientos;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtFilas;
    private javax.swing.JTextField txtLocalidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtVenue;
    // End of variables declaration//GEN-END:variables
}
